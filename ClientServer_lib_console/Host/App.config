<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>

	<system.diagnostics>
		<sources>
			<source name="System.ServiceModel.MessageLogging" switchValue="Warning,ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener"
						 name="Default">
						<filter type="" />
					</add>
					<add name="ServiceModelMessageLoggingListener">
						<filter type="" />
					</add>
				</listeners>
			</source>
			<source propagateActivity="true"
					name="System.ServiceModel"
					switchValue="Warning,ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default">
						<filter type="" />
					</add>
					<add name="ServiceModelTraceListener">
						<filter type="" />
					</add>
				</listeners>
			</source>
		</sources>
		<sharedListeners>
			<add initializeData="D:\Repos\Service_test_\ClientServer_lib_console\Server\app_messages.svclog"
                 type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                 name="ServiceModelMessageLoggingListener"
				 traceOutputOptions="DateTime, Timestamp, ProcessId">
				<filter type="" />
			</add>
			<add initializeData="D:\Repos\Service_test_\ClientServer_lib_console\Server\app_tracelog.svclog"
                 type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                 name="ServiceModelTraceListener"
				 traceOutputOptions="DateTime, Timestamp, ProcessId">
				<filter type="" />
			</add>
		</sharedListeners>
	</system.diagnostics>
	
	<system.serviceModel>
		<diagnostics performanceCounters="Default">
			<messageLogging logEntireMessage="true"
							logMalformedMessages="true"
                			logMessagesAtServiceLevel="true"
							logMessagesAtTransportLevel="true"
							/>
			<endToEndTracing messageFlowTracing="true" />
		</diagnostics>
		
		<services>
			<service name="Server.MultiplyService" 
					 behaviorConfiguration="mexBehavior"
					 >
				<endpoint address="WSMultiplyServiceMessage"
						  binding="wsHttpBinding"
						  contract="Server.IMultiplyService"
						  bindingConfiguration="SecureBindingTransport">
					<identity>
						<dns value="localhost" />
					</identity>
				</endpoint>
				<endpoint address="WSMultiplyServiceTransport"
						  binding="wsHttpBinding"
						  contract="Server.IMultiplyService"
		  				  bindingConfiguration="SecureBindingTransport">
					<identity>
						<dns value="localhost" />
					</identity>
				</endpoint>
				<endpoint address=" https://localhost:8080/ "
						  behaviorConfiguration="endpointCredentialBehavior"
						  binding="wsHttpBinding"
						  bindingConfiguration="SecureBindingTransport"
						  contract="Server.IMultiplyService"/>

				<endpoint address="mex" 
						  binding="mexHttpBinding" 
						  contract="IMetadataExchange"
						  > 
				</endpoint>
				
				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:8080"/>
					</baseAddresses>
				</host>
				
			</service>
		</services>
		<behaviors>
			<serviceBehaviors>

				<behavior name="">
					<serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
					<serviceDebug includeExceptionDetailInFaults="false" />
				</behavior>
				<behavior name ="mexBehavior"> 
					<serviceMetadata httpGetEnabled="true"></serviceMetadata>
				</behavior>

				<behavior name="endpointCredentialBehavior">
					<clientCredentials>
						<clientCertificate findValue="contoso.com"
										   storeLocation="CurrentUser"
										   storeName="My"
										   x509FindType="FindBySubjectName" />
					</clientCredentials>
				</behavior>
				
			</serviceBehaviors>
		</behaviors>
		
		<bindings>
			<wsHttpBinding>
				<binding name="SecureBindingMessage">
					<security mode="Message">
						<message clientCredentialType="UserName" />
					</security>
				</binding>
				<binding name="SecureBindingTransport">
					<security mode="Transport">
						<transport clientCredentialType="Certificate"/>
					</security>
				</binding>
			</wsHttpBinding>
		</bindings>
		

	</system.serviceModel>
</configuration>